let e="subscribe",t="textContent",r="Attribute",s="set",n="remove",i="get"+r,l=i+"Names",o="appendChild",a=(e,r)=>e[t]=r,u=e=>e,f={},c=0,d=new DOMParser,h=document,v=e=>3===e.nodeType,b=e=>"function"==typeof e,p=(e="\0")=>{let t=e[0],r=".?@".indexOf(t)+1;return[r?e.slice(1):e,r]},g=([e,t])=>(i,l)=>[()=>v(i)?a(i,l):i[s+r](e,l),()=>i[e]=l,()=>i[(l?s:n)+r](e,""),()=>{let{listener:t,options:r}=b(l)?{listener:l,options:!1}:l;i.addEventListener(e,t,r)}][t](),m=(e,t,s)=>{void 0===s&&i in t&&(s=t[i](e));let l=p(e);return l[1]&&t[n+r](e),s in f&&(s=f[s]),[g(l),N(t,s,e)]},x=e=>e instanceof Signal,N=(t,r,s)=>(x(r)?r=r[e](t,s):Array.isArray(r)&&x(r[0])&&(r=(0,r[1])(t,s)(r)),r),y=e=>{if(v(e)){let r=f[e[t]];if(null!=r){let t=e.parentNode,s=x(r)&&r;r=N(e,r),/string|number|boolean/.test(typeof r)?a(e,r):t&&s&&"value"in s&&r instanceof Node&&(e[n](),t[o](r),s.value=t)}}if(b(e[l]))for(let t of e[l]()){let[r,s]=m(t,e);r(e,s)}};export let html=(e,...t)=>{let r=e.length,s=t.length,n=[];for(let i,l=0;l<r;l++)i=l<s?`_${++c}${1e18*Math.random()}_`:"",n[l]=e[l]+i,f[i]=t[l];return n.join("")};export let render=(e,t="",r)=>{let s=x(e);r=r??s?e.value:h.createDocumentFragment();let n=(l=t,i=d.parseFromString(l,"text/html"),i?.all[2].childNodes);var i,l;for(let e of n)r[o](e);for(let e=h.createTreeWalker(r,5);e.nextNode();)y(e.currentNode);return s?r:e?e[o](r):r};export class Signal{#e;#t;#r;constructor(e){this.#e=e,this.#t=new Set,this.#r=new WeakMap}subscribe(e,t,r=u){if(this.#t.add(e),x(e))return;let n=g(p(t)),i=this.#r.get(e)||new Set;return i.add(((e,t)=>n(t,r(e)))),this.#r[s](e,i),this.#e}get value(){return this.#e}set value(e){this.#e=e;for(let t of this.#t)if(x(t))t.value=void 0;else for(let r of this.#r.get(t))r(e,t)}computed(t,r=[]){return r.forEach((t=>t[e](this))),[this,(r,s)=>(this[e](r,s,t),t)]}}
